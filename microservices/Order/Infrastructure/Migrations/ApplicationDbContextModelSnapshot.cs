// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CustomPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Point>("Coordinates")
                        .IsRequired()
                        .HasColumnType("geography(Point, 4326)");

                    b.HasKey("Id");

                    b.HasIndex("Coordinates");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Coordinates"), "GIST");

                    b.ToTable("CustomPoints");
                });

            modelBuilder.Entity("Domain.Entities.DeliveryPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyPointId")
                        .HasColumnType("integer");

                    b.Property<int?>("CustomPointId")
                        .HasColumnType("integer");

                    b.Property<int>("Method")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomPointId");

                    b.ToTable("DeliveryPoints");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CurrentPointId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<int>("PackageSize")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("ReceiverDeliveryPointId")
                        .HasColumnType("integer");

                    b.Property<string>("ReceiverEmail")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverId")
                        .HasColumnType("text");

                    b.Property<int>("SenderDeliveryPointId")
                        .HasColumnType("integer");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Tracker")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverDeliveryPointId");

                    b.HasIndex("SenderDeliveryPointId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.Entities.DeliveryPoint", b =>
                {
                    b.HasOne("Domain.Entities.CustomPoint", "CustomPoint")
                        .WithMany("DeliveryPoints")
                        .HasForeignKey("CustomPointId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CustomPoint");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.HasOne("Domain.Entities.DeliveryPoint", "ReceiverDeliveryPoint")
                        .WithMany("ReceiverOrders")
                        .HasForeignKey("ReceiverDeliveryPointId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.DeliveryPoint", "SenderDeliveryPoint")
                        .WithMany("SenderOrders")
                        .HasForeignKey("SenderDeliveryPointId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReceiverDeliveryPoint");

                    b.Navigation("SenderDeliveryPoint");
                });

            modelBuilder.Entity("Domain.Entities.CustomPoint", b =>
                {
                    b.Navigation("DeliveryPoints");
                });

            modelBuilder.Entity("Domain.Entities.DeliveryPoint", b =>
                {
                    b.Navigation("ReceiverOrders");

                    b.Navigation("SenderOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
